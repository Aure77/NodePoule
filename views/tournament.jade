extends layout
block head
  link(rel='stylesheet', href='#{staticsPrefixPath}/stylesheets//mytourney.css', type='text/css', media='all')
  link(rel='stylesheet', href='#{staticsPrefixPath}/stylesheets/dp_calendar.css', type='text/css', media='all')
  link(rel="stylesheet" href='#{staticsPrefixPath}/stylesheets/jquery.modal.css', type='text/css', media='all')
  script(type='text/javascript', src='//code.jquery.com/ui/1.11.1/jquery-ui.min.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/date.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/jquery.dp_calendar.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/jquery.dp_calendar-fr.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/underscore-min.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/jquery.jsPlumb-1.6.4-min.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/mytourney.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/jquery.modal.js')
  script(type='text/javascript').
    var Tourney = {
        "participants": !{JSON.stringify(participants)},
        "rounds": !{JSON.stringify(rounds)},
        "matches": !{JSON.stringify(tournament.matches)}
    };

    $(function() {  
        $(document).ajaxError(function(event, xhr, ajaxSettings, errorThrown) {
            if (xhr.status == 401) {
              //TODO: ne pas rediriger vers adduser ou autre...
              location.href = xhr.getResponseHeader("Location");
            }
            console.log(JSON.stringify(ajaxSettings) + " : " + errorThrown + " : " + JSON.stringify(xhr));
          });

        //Si le tournoi n'a pas commencé
        //TODO: Changer cette condition partout dans la page par genre "if(HasTournamentBegun)"
        if(!#{hasTournamentBegun}){
            //On permet l'inscription (TODO : Vérifier que les inscriptions ne sont pas closes
            var uid = '#{currentUser}';
            if(uid.length > 0 && _.contains(Tourney.participants, uid) != -1){
                $('#subscribe').html("Je ne participe plus");
                $('#subscribe').on("click", function(e) {
                    //supprimer l'utilisateur courant de la liste des participants du tournoi.
                    $.ajax({
                        type: 'GET',
                        url: "#{tournament.tournamentId}/leave",
                        success: updateView
                    });
                    return false;
                });
            }else{
                $('#subscribe').html("Je participe!");
                $('#subscribe').on("click", function(e) {
                    //ajouter l'utilisateur courant à la liste des participants du tournoi.
                    $.ajax({
                        type: 'GET',
                        url: "#{tournament.tournamentId}/join",
                        success: updateView
                    }).always(function (jqXHR) {
                        console.log(jqXHR.status);
                    });
                    return false;
                });
            }
        }else{
            //On ne crée le bracket qu'une fois le tournoi commencé
            if(Tourney.participants && Tourney.participants.length > 0) {
                MyTourney.drawBracket({
                    participants: Tourney.participants, 
                    rounds: Tourney.rounds, 
                    container: $('.bracket'),
                    baseProfileUrl: "#{baseUrl}/profile"
                });
            }
            //pareil pour l'agenda des matchs
            var events_array = [];
            $.each(Tourney.matches,function(index, match){
            var player1 = _.find(Tourney.participants, function (participant) { return participant.uid === match.pid1; });
            var player2 = _.find(Tourney.participants, function (participant) { return participant.uid === match.pid2; });
                events_array.push({
                    startDate: new Date(match.eventDate),
                    title: (player1 ? player1.name : "?") + " vs " + (player2 ? player2.name : "?"),
                    description: "Tour : " + match.round,
                    priority: 1
                });
            });
            
            $("#calendar").dp_calendar({
                events_array: events_array,
                order_by: 1 //1 = Time, 2 = Title, 3 = Priority 
            });
        }
    });
    
    function updateView(xhr, parts) {
      if (xhr.status == 302) {
        location.href = xhr.getResponseHeader("Location");
      }
      //Mettre à jour la liste des participants sur la page.
      console.log("Mettre à jour la liste des participants sur la page.");
    }

    function showCalendar() {
        $('#calendar').modal({
            closeClass: 'icon-remove',
            closeText: '!'
        });
    }

block content
    .competition-infos
      p.competition-title
          img(src='#{tournament.game.iconRelPath}')
          | #{tournament.game.name}
        p.competition-subtitle #{tournament.prettyStartDate} - #{tournament.prettyEndDate}

    div(style='width:100%;')
      a.button-link(href='#{tournament.tournamentId}/participants') Les participants
      a.button-link(href='#rules') Les règles
      a.button-link(href='/games/#{tournament.game._id}') Infos sur le jeu
      - if(tournament.topicId)
        a.button-link(href='#{tournament.topicId}') Topic du tournoi
      - if(!hasTournamentBegun)
        a#subscribe.button-link.subscribe(href='#') Je participe!
      - if(hasTournamentBegun)
        a.button-link(href='#calendar', id="open-calendar") Agenda

    div(style='clear:both;')
    - if(hasTournamentBegun)
      .competition-brackets
        .bracket
    
    - if(!hasTournamentBegun)
      //- TODO: Lister les inscrits
      .participants

    div(style='clear:both;')
    - if(HasTournamentBegun)
      div(id="calendar", class="dp_calendar")

    div(style='float: left;')
      a(name='rules').section-title Règles
      dl
      - each rule in tournament.rules
        dt.rule-title #{rule.title}
        dd.rule-description !{rule.description}