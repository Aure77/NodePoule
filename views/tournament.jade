extends layout
block head
  link(rel='stylesheet', href='#{staticsPrefixPath}/stylesheets//mytourney.css', type='text/css', media='all')
  link(rel='stylesheet', href='#{staticsPrefixPath}/stylesheets/dp_calendar.css', type='text/css', media='all')
  link(rel="stylesheet" href='#{staticsPrefixPath}/stylesheets/jquery.modal.css', type='text/css', media='all')
  script(type='text/javascript', src='//code.jquery.com/ui/1.11.1/jquery-ui.min.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/date.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/jquery.dp_calendar.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/jquery.dp_calendar-fr.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/underscore-min.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/jquery.jsPlumb-1.6.4-min.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/mytourney.js')
  script(type='text/javascript', src='#{staticsPrefixPath}/javascripts/jquery.modal.js')
  script(type='text/javascript').
    var Tourney = {
        "participants": !{JSON.stringify(participants)},
        "rounds": !{JSON.stringify(rounds)},
        "matches": !{JSON.stringify(tournament.matches)}
    };

    $(function() {
        var events_array = [];
        $.each(Tourney.matches,function(index, match){
        var player1 = _.find(Tourney.participants, function (participant) { return participant.uid === match.pid1; });
        var player2 = _.find(Tourney.participants, function (participant) { return participant.uid === match.pid2; });
            events_array.push({
                startDate: new Date(match.eventDate),
                title: (player1 ? player1.name : "?") + " vs " + (player2 ? player2.name : "?"),
                description: "Tour : " + match.round,
                priority: 1
            });
        });

        $("#calendar").dp_calendar({
            events_array: events_array,
            order_by: 1 //1 = Time, 2 = Title, 3 = Priority 
        });
        //$("#calendar").hide();

        //$("#open-calendar").on("click", function(e) {
        //    e.preventDefault();
        //    showCalendar();            
        //    return false;
        //});

        if(Tourney.participants && Tourney.participants.length > 0) {
            MyTourney.drawBracket({
                participants: Tourney.participants, 
                rounds: Tourney.rounds, 
                container: $('.bracket'),
                baseProfileUrl: "#{baseUrl}/profile"
            });
        }
    });

    function showCalendar() {
        $('#calendar').modal({
            closeClass: 'icon-remove',
            closeText: '!'
        });
    }

block content
  .main.zerogrid
    .competition-infos
      p.competition-title
          img(src='#{tournament.game.iconRelPath}')
          | #{tournament.game.name}
        p.competition-subtitle #{tournament.prettyStartDate} - #{tournament.prettyEndDate}

    div(style='width:100%;')
      a.button-link(href='#{tournament.tournamentId}/participants') Les participants
      a.button-link(href='#rules') Les règles
      a.button-link(href='/games/#{tournament.game._id}') Infos sur le jeu
      a.button-link(href='#{tournament.topicId}') Topic du tournoi
      a.button-link(href='#calendar', id="open-calendar") Agenda

    div(style='clear:both;')
    .competition-brackets
      .bracket

    div(style='clear:both;')
    div(id="calendar", class="dp_calendar")

    div(style='float: left;')
      a(name='rules').section-title Règles
      dl
      - each rule in tournament.rules
        dt.rule-title #{rule.title}
        dd.rule-description !{rule.description}